<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-04-26T16:29:55+08:00</updated><id>http://localhost:4000/</id><title>我的博客</title><subtitle>Moon is a minimal, one column jekyll theme for your blog.</subtitle><entry><title>how to use build blog based jekyll</title><link href="http://localhost:4000/readability-post/" rel="alternate" type="text/html" title="how to use build blog based jekyll" /><published>2016-04-26T00:00:00+08:00</published><updated>2016-04-26T00:00:00+08:00</updated><id>http://localhost:4000/readability-post</id><content type="html" xml:base="http://localhost:4000/readability-post/">&lt;p&gt;##为什么是Jekyll+github？
其官网首页 上的描述是： Transform your plain text into static websites and blogs。Jekyll将原始文本根据一定规则转换成静态的网页和博客。但这个转换并不是简单的字符串替换就了事了，而是首先读取各个文件中的内容，根据配置文件中描述的参数在内存中构建一个巨大的对象存储整个博客的信息，然后再将这些信息根据配置文件中定义的输出方式来生成具体的HTML文件。整个项目是由Ruby写的，所以若需要在本地调试则需要安装Ruby。&lt;/p&gt;

&lt;p&gt;使用Jekyll搭建博客有几个好处：
1. 不需要使用额外的数据库
2. 支持markdown，liquid，以及原始的html、css
3. 可以定义模板，并在模板上进行代码复用
4. github对其支持，可以直接在github上搭建，可以继承github上的各种好处（版本控制，免费，无流量限制）
5. 有很多扩展插件（但是在github上用不了，github不允许用户使用扩展插件，大概是出于安全性考虑）&lt;/p&gt;

&lt;p&gt;当然缺点也有很多：
1. 生成的是静态网页，无法动态加载，若需要外部服务如评论，只能使用类似于disquz，多说这样的外部插件了
2. 仅仅适合小型网站，不适合大中型网站
3. 没有数据库及服务端的逻辑&lt;/p&gt;

&lt;p&gt;由此可见，用来搭建个人博客相当合适（github版本控制，免费，无流量限制，支持markdown，无需关心服务器端逻辑和数据库）
##本地安装jekyll&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;安装ruby and gem&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 从[RubyInstaller](http://rubyinstaller.org/downloads/ &quot;rubyinstaller&quot;)下载ruby，如果有经验的可以直接从Ruby官网进行下载，前者安装比较无脑，会有一些额外的依赖包进行安装，版本也较低，而Ruby官网的版本则相对较高，但是没有额外的依赖包。下载的时候版本选较高一些的，否则会有bug，我选择的是2.0.0p353(2013-11-22)。安装的时候记得勾选添加环境变量。
 安装devkit，RubyInstaller页面中往下拉就能看到。选择自己版本的Ruby对应的devkit，下载并解压，然后执行:

 cd devkit

 ruby dk.rb init

 ruby dk.rb install
  这样就完成ruby环境的安装了

  安装gem，这个也可以去gem的官网进行下载，然后直接安装就行了，安装完成后使用gem -v查看一下是否安装成功。我安装的是2.1.11版本
  gem是可以选择源的，默认的源有点慢，可以使用ruby.taobao.org的源，方便快捷
  查看当前源
  D:\node\jekyll&amp;gt;gem sources list
  *** CURRENT SOURCES ***

  https://rubygems.org/

  D:\node\jekyll&amp;gt;
 添加新源

  gem sources -a http://ruby.taobao.org/
 删除默认源

  gem sources --remove https://rubygems.org/
 再次查看的时候保证只有http://ruby.taobao.org/就行了

 如果上面出错，去网上找找教程吧，ruby环境的搭建和gem的安装教程还是蛮多的，基本google一下遍地都是。
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;gem 安装jekyll&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##构建jekyll博客系统&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;构建一个博客系统有多种方式：
   1.手动生jekyll文件目录，并编写博客，完全自己定制
   2.找一份框架修改后使用
   3.从GitHub上fork别人的博客代码，在其中添加自己的文章
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如果选择 2, 那么  jekyll-bootstrap 是一个选择。 如果选择 3, 那么自己Google一下  github.io 博客  能找到不少博客,去fork,然后修改一下就好。 如果选择 1, 那么可以好好看看后文的内容。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;机制一 简单地说，你在 GitHub 上有一个账号，名为 username (任意)， 有一个项目，名为  username.github.io (固定格式，username与账号名一致)， 项目分支名为  master (固定)，这个分支有着类似下面的 目录结构:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      .
  ├── index.html
  ├── _config.yml
  ├── assets
  │   ├── blog-images
  │   ├── css
  │   ├── fonts
  │   ├── images
  │   └── javascripts
  ├── _includes
  ├── _layouts
  ├── _plugins
  ├── _posts
  └── _site 这样，当你访问  http://username.github.io/ 时，GitHub 会使用 Jekyll 解析 用户  username 名下的 username.github.io 项目中，分支为 master 的源代码，为你构建一个静态网站，并将生成的index.html展示给你。
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg. git clone https://github.com/mochj12/jekyll.git&lt;/p&gt;</content><category term="jekyll" /><category term="ruby" /><summary>A ton of text to test readability.</summary></entry></feed>
